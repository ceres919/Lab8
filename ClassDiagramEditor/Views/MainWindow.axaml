<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ClassDiagramEditor.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:views="clr-namespace:ClassDiagramEditor.Views"
		xmlns:views_elem="clr-namespace:ClassDiagramEditor.Views.Elements"
		xmlns:recelem_connection="clr-namespace:ClassDiagramEditor.Models.RectangleElements.Connections"
		xmlns:models="clr-namespace:ClassDiagramEditor.Models"
		xmlns:recelem="clr-namespace:ClassDiagramEditor.Models.RectangleElements"
		xmlns:conv="clr-namespace:ClassDiagramEditor.Converters"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ClassDiagramEditor.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="ClassDiagramEditor">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>
	
	<Window.Resources>
		<conv:StringToPointConverter x:Key="stringToPointConverter"/>
	</Window.Resources>
	
	<DockPanel>
		<Menu DockPanel.Dock="Top" BorderBrush="Gray" BorderThickness="1">
			<MenuItem Name="menuExport" Header="Экспортировать">
				<MenuItem Header="Экспортировать в PNG" Command="{Binding ExportButton}" CommandParameter="png"/>
				<MenuItem Header="Экспортировать в JSON" Command="{Binding ExportButton}" CommandParameter="json"/>
				<MenuItem Header="Экспортировать в YAML" Command="{Binding ExportButton}" CommandParameter="yaml"/>
				<MenuItem Header="Экспортировать в XML" Command="{Binding ExportButton}" CommandParameter="xml"/>
			</MenuItem>
			<MenuItem Name="menuImport" Header="Импортировать">
				<MenuItem Header="Импортировать в JSON" Command="{Binding ImportButton}" CommandParameter="json"/>
				<MenuItem Header="Импортировать в XML" Command="{Binding ImportButton}" CommandParameter="xml"/>
				<MenuItem Header="Импортировать в YAML" Command="{Binding ImportButton}" CommandParameter="yaml"/>
			</MenuItem>
			<MenuItem Name="addElement" Header="Диаграмма">
				<MenuItem Header="Класс" Command="{Binding AddNewClass}" CommandParameter="class"/>
				<MenuItem Header="Интерфейс" Command="{Binding AddNewClass}" CommandParameter="interface"/>
			</MenuItem>
			<MenuItem Name="addConnector" Header="Выбрать текущую связь">
				<MenuItem Header="Наследование" Command="{Binding CurrentConnection}" CommandParameter="inheritance"/>
				<MenuItem Header="Реализация" Command="{Binding CurrentConnection}" CommandParameter="realization"/>
				<MenuItem Header="Зависимость" Command="{Binding CurrentConnection}" CommandParameter="dependency"/>
				<MenuItem Header="Агрегирование" Command="{Binding CurrentConnection}" CommandParameter="aggregation"/>
				<MenuItem Header="Композиция" Command="{Binding CurrentConnection}" CommandParameter="composition"/>
				<MenuItem Header="Ассоциация" Command="{Binding CurrentConnection}" CommandParameter="association"/>
			</MenuItem>
		</Menu>
		<ItemsControl DragDrop.AllowDrop="True"
				  Items="{Binding Shapes}"
				  PointerPressed="OnPointerPressed">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<Canvas Name="highLevelCanvas" ClipToBounds="True" DragDrop.AllowDrop="True" Background="White"/>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>

			<ItemsControl.DataTemplates>
				<DataTemplate DataType="{x:Type	recelem:RectangleWithConnectors}">
					<views_elem:ClassControl DoubleTapped="OpenParameterWindow">
						<views_elem:ClassControl.RenderTransform>
							<TranslateTransform X="{Binding StartPoint.X}"
												Y="{Binding StartPoint.Y}"/>
						</views_elem:ClassControl.RenderTransform>
						
					</views_elem:ClassControl>
				</DataTemplate>

				<DataTemplate DataType="{x:Type	recelem:Connector}">
					<Path Data="{Binding GeometryPoints}" Fill="{Binding FillColor}"
							  Stroke="MediumPurple"
							  StrokeThickness="4"
						  DoubleTapped="DeleteConnection">
						<Path.RenderTransform>
							<TransformGroup>
								<RotateTransform
									Angle="{Binding RotationAngle}"
									CenterX="{Binding RotationX}"
									CenterY="{Binding RotationY}"/>
							</TransformGroup>
						</Path.RenderTransform>
					</Path>
				</DataTemplate>
			</ItemsControl.DataTemplates>
		</ItemsControl>
	</DockPanel>
</Window>

